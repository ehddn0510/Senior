<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.sm.repository.UserRepository">
    <insert id="insert" parameterType="edu.sm.model.User">
        INSERT INTO user (user_username, user_password, user_tel, user_email, user_name, user_birthday, user_zipcode, user_detail_add1, user_detail_addr1, user_detail_addr2, user_rdate, user_status, user_profile)
        VALUES (#{username}, #{password}, #{tel}, #{email}, #{name}, #{birthday}, #{zipcode}, #{detailAdd1}, #{detailAddr1}, #{detailAddr2}, #{regDate}, #{status}, #{profileImage});
    </insert>

    <select id="selectOne" parameterType="int" resultType="edu.sm.model.User">
        SELECT user_id AS userId, user_username AS username, user_password AS password,
               user_tel AS tel, user_email AS email, user_name AS name,
               user_birthday AS birthday, user_zipcode AS zipcode,
               user_detail_addr1 AS detailAddr1, user_detail_addr2 AS detailAddr2,
               user_detail_add1 AS detailAdd1, user_rdate AS regDate,
               user_status AS status, user_profile AS profileImage
        FROM user
        WHERE user_id = #{userId};
    </select>

    <!-- 사용자 이름 중복 확인 쿼리 -->
    <select id="findByUsername" parameterType="String" resultType="edu.sm.model.User">
    SELECT * FROM user WHERE user_username = #{username};
    </select>
            <!-- 전화번호 중복 확인 쿼리 -->
    <select id="findByTel" parameterType="String" resultType="edu.sm.model.User">
    SELECT * FROM user WHERE user_tel = #{tel};
    </select>
            <!-- 이메일 중복 확인 쿼리 -->
    <select id="findByEmail" parameterType="String" resultType="edu.sm.model.User">
    SELECT * FROM user WHERE user_email = #{email};
    </select>

    <!-- 회원 정보 수정 쿼리 (비밀번호 제외) -->
    <update id="updateUserInfo" parameterType="edu.sm.model.User">
        UPDATE user
        SET user_tel = #{tel},
            user_email = #{email},
            user_name = #{name},
            user_zipcode = #{zipcode},
            user_detail_add1 = #{detailAdd1},
            user_detail_addr1 = #{detailAddr1},
            user_detail_addr2 = #{detailAddr2},
            user_profile = #{profileImage}
        WHERE user_id = #{userId};
    </update>

    <!-- 비밀번호 수정 쿼리 -->
    <update id="updatePassword" parameterType="map">
        UPDATE user
        SET user_password = #{newPassword}
        WHERE user_id = #{userId};
    </update>

    <!-- 계정 비활성화 (소프트 삭제) 쿼리 -->
    <update id="deactivateUser" parameterType="int">
        UPDATE user
        SET user_status = 'inactive'
        WHERE user_id = #{userId};
    </update>

</mapper>
