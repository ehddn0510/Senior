<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.sm.repository.UserRepository">

    <!-- 특정 유저 조회 -->
    <select id="selectOne" parameterType="Integer" resultType="User">
        SELECT *
        FROM user
        WHERE user_id = #{userId};
    </select>

    <!-- 모든 유저 조회 -->
    <select id="findAll" resultType="User">
        SELECT *
        FROM user;
    </select>

    <!-- userId로 senior 데이터 조회 -->
    <select id="selectSeniorByUserId" parameterType="Integer" resultType="Senior">
        SELECT *
        FROM senior
        WHERE user_id = #{userId};
    </select>

    <!-- 유저 수정 (기본 정보 수정) -->
    <update id="update" parameterType="edu.sm.model.User">
        UPDATE user
        SET user_username = #{userUsername},
        user_tel = #{userTel},
        user_email = #{userEmail},
        user_name = #{userName},
        user_birthday = #{userBirthday},
        user_zipcode = #{userZipcode},
        user_street_addr = #{userStreetAddr}, <!-- 올바른 필드 이름으로 수정 -->
        user_detail_addr1 = #{userDetailAddr1},
        user_detail_addr2 = #{userDetailAddr2},
        user_profile = #{userProfile}
        WHERE user_id = #{userId};
    </update>

    <!-- 유저 상태를 inactive로 변경 -->
    <update id="updateStatusToInactive" parameterType="int">
        UPDATE user
        SET user_status = 'inactive'
        WHERE user_id = #{userId};
    </update>

    <!-- 비밀번호 수정 -->
    <update id="updatePasswordById" parameterType="edu.sm.model.User">
        UPDATE user
        SET user_password = #{userPassword}
        WHERE user_id = #{userId};
    </update>

    <!-- 월별 회원 가입 수 조회 -->
    <select id="selectMonthlySignupStats" resultType="map">
        SELECT DATE_FORMAT(user_rdate, '%Y-%m') AS signup_month,
               COUNT(*)                         AS signup_count
        FROM user
        WHERE user_rdate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)
        GROUP BY DATE_FORMAT(user_rdate, '%Y-%m')
        ORDER BY signup_month ASC;
    </select>

    <!-- 유저 상태별 카운트 -->
    <select id="selectUserStatusCount" resultType="map">
        SELECT user_status, COUNT(*) AS count
        FROM user
        GROUP BY user_status;
    </select>

    <!--    유저의 계약 금액 조회-->
    <select id="selectTotalContractAmountByUserId" parameterType="Integer" resultType="Long">
        SELECT SUM(contract_price) AS total_contract_amount
        FROM contract
        WHERE user_id = #{userId}
    </select>
    <!-- 유저별 시니어 수 조회 -->
    <select id="selectSeniorCountByUserId" parameterType="Integer" resultType="Long">
        SELECT COUNT(*) AS senior_count
        FROM senior
        WHERE user_id = #{userId}
    </select>

    <select id="selectContractRenewalCountByUserId" parameterType="Integer" resultType="Long">
        SELECT COUNT(*) AS renewal_count
        FROM contract
        WHERE user_id = #{userId}
    </select>

</mapper>
